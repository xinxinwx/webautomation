{
  "uid" : "2d0d49138ddd96ca",
  "name" : "test_login_0_user_wrongForamt[data0]",
  "fullName" : "TestCases.test_login_error.TestLoginError#test_login_0_user_wrongForamt",
  "historyId" : "bad4009c532994768ce93e8f8a4a890c",
  "time" : {
    "start" : 1574697771335,
    "stop" : 1574697802130,
    "duration" : 30795
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <TestCases.test_login_error.TestLoginError object at 0x000001BD871224E0>\ndata = {'check': '请输入正确的手机号', 'passwd': '123456', 'user': '15631440614'}\naccess_web = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1679a1911c7d9949ee9e6b020640e994\")>, <PageObejects.login_page.LoginPage object at 0x000001BD871228D0>)\n\n    @pytest.mark.parametrize('data', LD.phone_data)\n    # 异常用例手机号格式不正确(大于11位 小于11位 为空  不在这个号码段)\n    def test_login_0_user_wrongForamt(self, data, access_web):\n        access_web[1].login(data['user'], data['passwd'])\n>       assert access_web[1].get_errorMsg_from_loginArea() == data['check']\n\nTestCases\\test_login_error.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObejects\\login_page.py:19: in get_errorMsg_from_loginArea\n    return self.get_text(loc.errormsg,doc)\nCommon\\basepage.py:82: in get_text\n    ele = self.get_element(locator, doc)\nCommon\\basepage.py:46: in get_element\n    self.wait_eleVisible(locator,doc);\nCommon\\basepage.py:30: in wait_eleVisible\n    WebDriverWait(self.driver,times,poll_frequency).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1679a1911c7d9949ee9e6b020640e994\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001BD87148588>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\软件\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "refresh_page",
    "time" : {
      "start" : 1574697771334,
      "stop" : 1574697771334,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "access_web",
    "time" : {
      "start" : 1574697766445,
      "stop" : 1574697771334,
      "duration" : 4889
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <TestCases.test_login_error.TestLoginError object at 0x000001BD871224E0>\ndata = {'check': '请输入正确的手机号', 'passwd': '123456', 'user': '15631440614'}\naccess_web = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1679a1911c7d9949ee9e6b020640e994\")>, <PageObejects.login_page.LoginPage object at 0x000001BD871228D0>)\n\n    @pytest.mark.parametrize('data', LD.phone_data)\n    # 异常用例手机号格式不正确(大于11位 小于11位 为空  不在这个号码段)\n    def test_login_0_user_wrongForamt(self, data, access_web):\n        access_web[1].login(data['user'], data['passwd'])\n>       assert access_web[1].get_errorMsg_from_loginArea() == data['check']\n\nTestCases\\test_login_error.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObejects\\login_page.py:19: in get_errorMsg_from_loginArea\n    return self.get_text(loc.errormsg,doc)\nCommon\\basepage.py:82: in get_text\n    ele = self.get_element(locator, doc)\nCommon\\basepage.py:46: in get_element\n    self.wait_eleVisible(locator,doc);\nCommon\\basepage.py:30: in wait_eleVisible\n    WebDriverWait(self.driver,times,poll_frequency).until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1679a1911c7d9949ee9e6b020640e994\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001BD87148588>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\软件\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "abb8b8d5a4f340c0",
      "name" : "log",
      "source" : "abb8b8d5a4f340c0.txt",
      "type" : "text/plain",
      "size" : 29401
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "refresh_page::0",
    "time" : {
      "start" : 1574697802203,
      "stop" : 1574697802802,
      "duration" : 599
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "access_web::0",
    "time" : {
      "start" : 1574697804555,
      "stop" : 1574697806734,
      "duration" : 2179
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "TestCases"
  }, {
    "name" : "suite",
    "value" : "test_login_error"
  }, {
    "name" : "subSuite",
    "value" : "TestLoginError"
  }, {
    "name" : "host",
    "value" : "DESKTOP-SILG5DT"
  }, {
    "name" : "thread",
    "value" : "2784-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCases.test_login_error"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'user': '15631440614', 'passwd': '123456', 'check': '请输入正确的手机号'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "2d0d49138ddd96ca.json",
  "parameterValues" : [ "{'user': '15631440614', 'passwd': '123456', 'check': '请输入正确的手机号'}" ]
}